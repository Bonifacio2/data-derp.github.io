"use strict";(self.webpackChunkdata_derp=self.webpackChunkdata_derp||[]).push([[5210],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(r),f=a,g=u["".concat(c,".").concat(f)]||u[f]||p[f]||i;return r?n.createElement(g,o(o({ref:t},d),{},{components:r})):n.createElement(g,o({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9255:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return d},default:function(){return u}});var n=r(3117),a=r(102),i=(r(7294),r(3905)),o=["components"],l={sidebar_position:9},c="Data Testing",s={unversionedId:"data-transformation/data-testing",id:"data-transformation/data-testing",title:"Data Testing",description:"Shift Left Testing: Building Reliable Pipelines",source:"@site/docs/data-transformation/data-testing.mdx",sourceDirName:"data-transformation",slug:"/data-transformation/data-testing",permalink:"/docs/data-transformation/data-testing",editUrl:"https://github.com/data-derp/data-derp.github.io/tree/master/docs/docs/data-transformation/data-testing.mdx",tags:[],version:"current",lastUpdatedBy:"Kelsey Mok",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Advanced Wrangling",permalink:"/docs/data-transformation/advanced-wrangling"},next:{title:"Exercise: Core Logic",permalink:"/docs/data-transformation/exercise-core-logic"}},d=[{value:"Shift Left Testing: Building Reliable Pipelines",id:"shift-left-testing-building-reliable-pipelines",children:[],level:2},{value:"Building reliable data pipelines without access to real data",id:"building-reliable-data-pipelines-without-access-to-real-data",children:[],level:2}],p={toc:d};function u(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"data-testing"},"Data Testing"),(0,i.kt)("h2",{id:"shift-left-testing-building-reliable-pipelines"},"Shift Left Testing: Building Reliable Pipelines"),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("figure",{class:"video-container"},(0,i.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/MR50CEFqZZo",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0})),(0,i.kt)("p",null,"Read (optional): ",(0,i.kt)("a",{parentName:"p",href:"https://www.thoughtworks.com/en-de/insights/blog/testing/get-back-to-basics-with-testing-data-pipelines-two-orthogonal-planes"},"Get back to basics with testing data pipelines: two orthogonal planes"))),(0,i.kt)("h2",{id:"building-reliable-data-pipelines-without-access-to-real-data"},"Building reliable data pipelines without access to real data"),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("figure",{class:"video-container"},(0,i.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/kr9kWB2aJNM",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}))))}u.isMDXComponent=!0}}]);