"use strict";(self.webpackChunkdata_derp=self.webpackChunkdata_derp||[]).push([[7082],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(a),m=n,k=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return a?r.createElement(k,o(o({ref:t},p),{},{components:a})):r.createElement(k,o({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var u=2;u<i;u++)o[u]=a[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},2438:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return c}});var r=a(3117),n=a(102),i=(a(7294),a(3905)),o=["components"],l={sidebar_position:1},s="Overview",u={unversionedId:"making-big-data-work/overview",id:"making-big-data-work/overview",title:"Overview",description:"Preface",source:"@site/docs/making-big-data-work/overview.mdx",sourceDirName:"making-big-data-work",slug:"/making-big-data-work/overview",permalink:"/docs/making-big-data-work/overview",editUrl:"https://github.com/data-derp/data-derp.github.io/tree/master/docs/docs/making-big-data-work/overview.mdx",tags:[],version:"current",lastUpdatedBy:"Pawarit Laosunthara",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Want to learn more? (Optional)",permalink:"/docs/beyond-the-batch/additional-resources"},next:{title:"Paradigm Shifts",permalink:"/docs/making-big-data-work/paradigm-shifts"}},p=[{value:"Preface",id:"preface",children:[],level:2},{value:"History of Big Data - Revisited",id:"history-of-big-data---revisited",children:[],level:2},{value:"Some Problems with Big Data Workloads",id:"some-problems-with-big-data-workloads",children:[],level:2},{value:"Some More Problems with Big Data Workloads",id:"some-more-problems-with-big-data-workloads",children:[],level:2},{value:"Modern Solutions",id:"modern-solutions",children:[],level:2},{value:"Delta Lake Key Features",id:"delta-lake-key-features",children:[],level:2}],d={toc:p};function c(e){var t=e.components,l=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"overview"},"Overview"),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("figure",{class:"video-container"},(0,i.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/soYUor6W3vs",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}))),(0,i.kt)("h2",{id:"preface"},"Preface"),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("p",null,(0,i.kt)("img",{alt:"not-everything-is-big-data.png",src:a(6392).Z}))),(0,i.kt)("p",null,"We\u2019re here to teach you big data skills, but in reality..."),(0,i.kt)("p",null,"Single-Node vs. Cluster: not everything is Big Data!\nRead: ",(0,i.kt)("a",{parentName:"p",href:"https://www.indellient.com/blog/a-journey-from-pandas-to-spark-data-frames/"},"You don\u2019t always need Spark"),"\nRead: ",(0,i.kt)("a",{parentName:"p",href:"https://www.indellient.com/blog/a-journey-from-pandas-to-spark-data-frames/"},"Sometimes Pandas deployed on a single node function/container is just fine!"),")"),(0,i.kt)("p",null,"Batch vs Streaming: ",(0,i.kt)("a",{parentName:"p",href:"https://www.section.io/engineering-education/batch-processing-vs-stream-processing/"},"streaming isn\u2019t always the solution"),"!"),(0,i.kt)("h2",{id:"history-of-big-data---revisited"},"History of Big Data - Revisited"),(0,i.kt)("p",null,"Databases"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"single node servers, vertical scaling only"),(0,i.kt)("li",{parentName:"ul"},"mostly used for operational data, transactions")),(0,i.kt)("p",null,"On-Prem Data Warehouses"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"horizontal scaling possible"),(0,i.kt)("li",{parentName:"ul"},"utilized massively parallel processing (MPP) to run big queries"),(0,i.kt)("li",{parentName:"ul"},"SQL-only interface, low interoperability")),(0,i.kt)("p",null,"On-Prem Data Lakes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Hadoop ecosystem"),(0,i.kt)("li",{parentName:"ul"},"Data Processing via MapReduce, Hive, Spark, etc."),(0,i.kt)("li",{parentName:"ul"},"Difficult for data governance and data integrity ")),(0,i.kt)("h2",{id:"some-problems-with-big-data-workloads"},"Some Problems with Big Data Workloads"),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("figure",{class:"video-container"},(0,i.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/VRm2UMsFVz0",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0})),(0,i.kt)("p",null,"ACID Transactions")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"ACID transactions"),(0,i.kt)("li",{parentName:"ul"},"Corrupt/incomplete data"),(0,i.kt)("li",{parentName:"ul"},"Editability, schema evolution"),(0,i.kt)("li",{parentName:"ul"},"GDPR requests"),(0,i.kt)("li",{parentName:"ul"},"Data versioning and auditability (very important for getting Machine Learning models approved by regulators)")),(0,i.kt)("h2",{id:"some-more-problems-with-big-data-workloads"},"Some More Problems with Big Data Workloads"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Batch vs Streaming conundrum")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Lambda Architecture: Having to maintain different code bases and data stores for batch and for streaming")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Kappa Architecture: play everything through the streaming pipeline...but your retention period is ",(0,i.kt)("strong",{parentName:"li"},"limited")," and it\u2019s a pain to manage, query, edit",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Moral of the story: streaming/Kappa architecture isn\u2019t a silver bullet")))),(0,i.kt)("h2",{id:"modern-solutions"},"Modern Solutions"),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://delta.io/"},"Delta Lake")),(0,i.kt)("figure",{class:"video-container"},(0,i.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/LJtShrQqYZY",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"This presentation is actually from early/mid 2019 (ignore the upload date on YouTube),"),(0,i.kt)("li",{parentName:"ul"},"Delta Lake\u2019s gotten even better since then!"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://databricks.com/discover/demos/delta-lake"},"Demo video")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Executive Summary:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Delta Lake is just Apache Parquet with ",(0,i.kt)("strong",{parentName:"li"},"a transaction log on top"),"!"),(0,i.kt)("li",{parentName:"ul"},"Keep using your preferred storage technology (e.g. S3, Azure Data Lake Storage)"),(0,i.kt)("li",{parentName:"ul"},"Allows fine-grained updates, deletes to big data (GDPR)"),(0,i.kt)("li",{parentName:"ul"},"Allows data versioning, time travel, rollbacks, audit history"),(0,i.kt)("li",{parentName:"ul"},"Optimizes the layout of your underlying parquet files (via OPTIMIZE) for query performance")))),(0,i.kt)("h2",{id:"delta-lake-key-features"},"Delta Lake Key Features"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://delta.io/"},"Link")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"ACID Transactions",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Ensures data integrity, using the transaction log"))),(0,i.kt)("li",{parentName:"ul"},"Updates, Deletes, Upserts",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Perform Data Manipulation Language (DML) commands such as updates/deletes/upserts"),(0,i.kt)("li",{parentName:"ul"},"Important for GDPR, improving/maintaining data quality of existing tables"))),(0,i.kt)("li",{parentName:"ul"},"Advanced Metadata handling",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Enhanced capturing and utilization of metadata"),(0,i.kt)("li",{parentName:"ul"},"Improves query performance compared to standard Parquet"))),(0,i.kt)("li",{parentName:"ul"},"Schema Enforcement & Evolution")))}c.isMDXComponent=!0},6392:function(e,t,a){t.Z=a.p+"assets/images/not-everything-is-big-data-f661a3f9269c794183fe4ce3480a796d.png"}}]);