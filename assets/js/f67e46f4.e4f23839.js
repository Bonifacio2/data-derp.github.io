"use strict";(self.webpackChunkdata_derp=self.webpackChunkdata_derp||[]).push([[3025],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return a?n.createElement(g,o(o({ref:t},c),{},{components:a})):n.createElement(g,o({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8582:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var n=a(3117),r=a(102),i=(a(7294),a(3905)),o=["components"],l={sidebar_position:3},s="Data Milky Way: Data Processing",p={unversionedId:"data-engineering-the-good-parts/data-milky-way-data-processing",id:"data-engineering-the-good-parts/data-milky-way-data-processing",title:"Data Milky Way: Data Processing",description:"Evolution of Data Processing",source:"@site/docs/data-engineering-the-good-parts/data-milky-way-data-processing.mdx",sourceDirName:"data-engineering-the-good-parts",slug:"/data-engineering-the-good-parts/data-milky-way-data-processing",permalink:"/docs/data-engineering-the-good-parts/data-milky-way-data-processing",editUrl:"https://github.com/data-derp/data-derp.github.io/tree/master/docs/docs/data-engineering-the-good-parts/data-milky-way-data-processing.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Data Milky Way: Concepts and Tools",permalink:"/docs/data-engineering-the-good-parts/data-milky-way-concepts-tools"},next:{title:"Data Milky Way: Architecture Reference",permalink:"/docs/data-engineering-the-good-parts/data-milky-way-architecture-reference"}},c=[{value:"Evolution of Data Processing",id:"evolution-of-data-processing",children:[],level:2},{value:"Practical Data Workloads",id:"practical-data-workloads",children:[],level:2},{value:"Typical Data Pipeline",id:"typical-data-pipeline",children:[],level:2},{value:"Orchestration Core Concepts",id:"orchestration-core-concepts",children:[],level:2}],d={toc:c};function u(e){var t=e.components,l=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"data-milky-way-data-processing"},"Data Milky Way: Data Processing"),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("figure",{class:"video-container"},(0,i.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/fntnjzQxGeo",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}))),(0,i.kt)("h2",{id:"evolution-of-data-processing"},"Evolution of Data Processing"),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("p",null,(0,i.kt)("img",{alt:"map-reduce-processing.png",src:a(4015).Z}),"\n",(0,i.kt)("img",{alt:"data-processing-vision.png",src:a(7160).Z}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.xplenty.com/blog/apache-spark-vs-hadoop-mapreduce/"},"Hadoop to Spark w/ Object Storage"),", ",(0,i.kt)("a",{parentName:"li",href:"https://lakefs.io/metadata-management-hive-metastore-vs-aws-glue/"},"Data Catalogs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.upsolver.com/blog/batch-stream-a-cheat-sheet"},"Batch and Micro-Batch Streaming")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://hazelcast.com/glossary/stream-processing/"},"Continuous Processing"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://beam.apache.org/"},"Apache Beam: One syntax to rule them all?")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Apache Beam is based on the ",(0,i.kt)("a",{parentName:"li",href:"https://storage.googleapis.com/pub-tools-public-publication-data/pdf/43864.pdf"},"Dataflow model introduced by Google")),(0,i.kt)("li",{parentName:"ul"},"Aims to unify the semantics of batch & streaming processing across engines (Flink, Spark, etc.)")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"You don\u2019t necessarily need streaming, let alone Beam!")," evaluate your own project\u2019s needs\nAdvanced (optional): ",(0,i.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/kinesisanalytics/latest/java/examples-beam.html"},"Practice developing a Beam app in AWS Kinesis"),"\nWe\u2019ll mention Flink more in later sections \ud83c\udf30"),(0,i.kt)("h2",{id:"practical-data-workloads"},"Practical Data Workloads"),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("p",null,(0,i.kt)("img",{alt:"big-data-sword.png",src:a(2332).Z})),(0,i.kt)("p",null,"We\u2019re here to teach you big data skills, but in reality...")),(0,i.kt)("p",null,"Single-Node vs. Cluster: not everything is Big Data!\n",(0,i.kt)("a",{parentName:"p",href:"https://www.indellient.com/blog/a-journey-from-pandas-to-spark-data-frames/"},"You don\u2019t always need Spark"),"\n(",(0,i.kt)("a",{parentName:"p",href:"https://www.indellient.com/blog/a-journey-from-pandas-to-spark-data-frames/"},"sometimes Pandas deployed on a single node function/container is just fine!"),")"),(0,i.kt)("p",null,"Batch vs Streaming: ",(0,i.kt)("a",{parentName:"p",href:"https://www.section.io/engineering-education/batch-processing-vs-stream-processing/"},"streaming isn\u2019t always the solution"),"!"),(0,i.kt)("p",null,"Batch Orchestration options"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Cron"},"CRON"),", ",(0,i.kt)("a",{parentName:"li",href:"https://airflow.apache.org/"},"Apache Airflow"),", Triggers (e.g. AWS Lambda, AWS Step Functions, ",(0,i.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/glue/latest/dg/trigger-job.html"},"Glue Triggers"),")"),(0,i.kt)("li",{parentName:"ul"},"Simple CRON schedules (e.g. on Databricks) might work just fine, depends on the use-case")),(0,i.kt)("h2",{id:"typical-data-pipeline"},"Typical Data Pipeline"),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("p",null,(0,i.kt)("img",{alt:"typical-data-pipeline.png",src:a(6989).Z}))),(0,i.kt)("h2",{id:"orchestration-core-concepts"},"Orchestration Core Concepts"),(0,i.kt)("p",null,"But how do we make our pipeline ",(0,i.kt)("strong",{parentName:"p"},"flow"),"? \ud83c\udf0a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Data Engineering workflows often involve transforming and transferring data from one place to another"),(0,i.kt)("li",{parentName:"ul"},"Workflows in real-life have multiple steps and stages")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Sometimes, everything might work fine with just CRON jobs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"However, other times, you might want to control the state transitions of these steps:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"e.g. if Step A doesn\u2019t run properly, don\u2019t run Step B because the data could be corrupt, instead run Step C"),(0,i.kt)("li",{parentName:"ul"},"Once again, the concept of Directed Acyclic Graphs (DAGs) can come to our rescue"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Apache Airflow is just one nice way of setting up DAGs to orchestrate jobs \ud83c\udf08"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Note: Airflow is primarily designed as a task orchestration tool"),(0,i.kt)("li",{parentName:"ul"},"You can trigger tasks on the Airflow cluster itself or on remote targets (e.g. AWS Fargate, Databricks, etc.)"),(0,i.kt)("li",{parentName:"ul"},"NOT designed for transferring large amounts of actual data"),(0,i.kt)("li",{parentName:"ul"},"Reference"),(0,i.kt)("li",{parentName:"ul"},"Play around with Airflow locally")))))}u.isMDXComponent=!0},2332:function(e,t,a){t.Z=a.p+"assets/images/big-data-sword-f661a3f9269c794183fe4ce3480a796d.png"},7160:function(e,t,a){t.Z=a.p+"assets/images/data-processing-vision-a59ff56df35005ec4085de683d25e1bc.png"},4015:function(e,t,a){t.Z=a.p+"assets/images/map-reduce-processing-2397bafb5a04130d82688f98633d37d8.png"},6989:function(e,t,a){t.Z=a.p+"assets/images/typical-data-pipeline-b2ce97ec3c25bcdc5bf36b8a5a5fbda0.png"}}]);