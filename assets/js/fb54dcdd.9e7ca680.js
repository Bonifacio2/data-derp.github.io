"use strict";(self.webpackChunkdata_derp=self.webpackChunkdata_derp||[]).push([[6530],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return a?r.createElement(g,i(i({ref:t},c),{},{components:a})):r.createElement(g,i({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9232:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var r=a(3117),n=a(102),o=(a(7294),a(3905)),i=["components"],s={sidebar_position:4},l="Data Milky Way: Brief History (Part 3)",p={unversionedId:"data-engineering-the-good-parts/data-milky-way-brief-history-part-3-data-processing",id:"data-engineering-the-good-parts/data-milky-way-brief-history-part-3-data-processing",title:"Data Milky Way: Brief History (Part 3)",description:"Evolution of Data Processing",source:"@site/docs/data-engineering-the-good-parts/data-milky-way-brief-history-part-3-data-processing.mdx",sourceDirName:"data-engineering-the-good-parts",slug:"/data-engineering-the-good-parts/data-milky-way-brief-history-part-3-data-processing",permalink:"/docs/data-engineering-the-good-parts/data-milky-way-brief-history-part-3-data-processing",editUrl:"https://github.com/data-derp/data-derp.github.io/tree/master/docs/docs/data-engineering-the-good-parts/data-milky-way-brief-history-part-3-data-processing.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Data Milky Way: A Brief History (Part 2) - Evolution",permalink:"/docs/data-engineering-the-good-parts/data-milky-way-brief-history-part-2-evolution"},next:{title:"Data Milky Way: A Brief History (Part 4) - Architecture Reference",permalink:"/docs/data-engineering-the-good-parts/data-milky-way-brief-history-part-4-arch-ref"}},c=[{value:"Evolution of Data Processing",id:"evolution-of-data-processing",children:[],level:2},{value:"Orchestration Core Concepts",id:"orchestration-core-concepts",children:[],level:2},{value:"Practical Data Workloads",id:"practical-data-workloads",children:[{value:"Single-Node vs. Cluster",id:"single-node-vs-cluster",children:[],level:3},{value:"Batch vs Streaming",id:"batch-vs-streaming",children:[],level:3},{value:"Orchestration options",id:"orchestration-options",children:[],level:3}],level:2}],d={toc:c};function u(e){var t=e.components,s=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"data-milky-way-brief-history-part-3"},"Data Milky Way: Brief History (Part 3)"),(0,o.kt)("div",{style:{textAlign:"center"}},(0,o.kt)("figure",{class:"video-container"},(0,o.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/Uc-Wtem-lyw",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}))),(0,o.kt)("h2",{id:"evolution-of-data-processing"},"Evolution of Data Processing"),(0,o.kt)("div",{style:{textAlign:"center"}},(0,o.kt)("p",null,(0,o.kt)("img",{alt:"map-reduce-processing.png",src:a(4015).Z}),"\n",(0,o.kt)("img",{alt:"data-processing-vision.png",src:a(7160).Z}))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Recap: ",(0,o.kt)("a",{parentName:"li",href:"https://www.xplenty.com/blog/apache-spark-vs-hadoop-mapreduce/"},"Why move from Hadoop to Spark + Object Storage")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://lakefs.io/metadata-management-hive-metastore-vs-aws-glue/"},"Intro to Metastores and Data Catalogs")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.upsolver.com/blog/batch-stream-a-cheat-sheet"},"Batch and Micro-Batch Streaming")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://hazelcast.com/glossary/stream-processing/"},"Continuous Processing")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://beam.apache.org/"},"One syntax to rule them all?"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Apache Beam is based on the ",(0,o.kt)("a",{parentName:"li",href:"https://storage.googleapis.com/pub-tools-public-publication-data/pdf/43864.pdf"},"Dataflow model introduced by Google")),(0,o.kt)("li",{parentName:"ul"},"Aims to unify the semantics of batch & streaming processing across engines (Flink, Spark, etc.)")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"You don\u2019t necessarily need streaming, let alone Beam!")," Evaluate your own project\u2019s needs"),(0,o.kt)("p",null,"In my experience, most teams actually simply choose either Spark Structured Streaming or Flink (without Beam)"),(0,o.kt)("h2",{id:"orchestration-core-concepts"},"Orchestration Core Concepts"),(0,o.kt)("p",null,"But how do we make our pipeline ",(0,o.kt)("strong",{parentName:"p"},"flow"),"? \ud83c\udf0a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Data Engineering workflows often involve transforming and transferring data from one place to another"),(0,o.kt)("li",{parentName:"ul"},"Workflows in real-life have multiple steps and stages")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Sometimes, everything might work fine with just CRON jobs")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"However, other times, you might want to control the state transitions of these steps:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"e.g. if Step A doesn\u2019t run properly, don\u2019t run Step B because the data could be corrupt, instead run Step C"),(0,o.kt)("li",{parentName:"ul"},"Once again, the concept of Directed Acyclic Graphs (DAGs) can come to our rescue"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=XD7euLOzKbs&ab_channel=SFPython"},"Apache Airflow")," is just one nice way of setting up DAGs to orchestrate jobs \ud83c\udf08"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Note: Airflow is primarily designed as a task orchestration tool"),(0,o.kt)("li",{parentName:"ul"},"You can trigger tasks on the Airflow cluster itself or on remote targets (e.g. AWS Fargate, Databricks, etc.)"),(0,o.kt)("li",{parentName:"ul"},"NOT designed for transferring large amounts of actual data"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://airflow.apache.org/docs/apache-airflow/1.10.1/#beyond-the-horizon"},"Reference")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/kelseymok/airflow/"},"Play around with Airflow locally"))))),(0,o.kt)("h2",{id:"practical-data-workloads"},"Practical Data Workloads"),(0,o.kt)("div",{style:{textAlign:"center"}},(0,o.kt)("p",null,(0,o.kt)("img",{alt:"big-data-sword.png",src:a(2332).Z})),(0,o.kt)("p",null,"We\u2019re here to teach you big data skills, but in reality...")),(0,o.kt)("h3",{id:"single-node-vs-cluster"},"Single-Node vs. Cluster"),(0,o.kt)("p",null,"Not everything is Big Data!\n",(0,o.kt)("a",{parentName:"p",href:"https://www.indellient.com/blog/a-journey-from-pandas-to-spark-data-frames/"},"You don\u2019t always need Spark"),"\n(",(0,o.kt)("a",{parentName:"p",href:"https://www.indellient.com/blog/a-journey-from-pandas-to-spark-data-frames/"},"sometimes Pandas deployed on a single node function/container is just fine!"),")"),(0,o.kt)("h3",{id:"batch-vs-streaming"},"Batch vs Streaming"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.section.io/engineering-education/batch-processing-vs-stream-processing/"},"Streaming isn\u2019t always the solution"),"!"),(0,o.kt)("h3",{id:"orchestration-options"},"Orchestration options"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"DAG-based approaches:")," ",(0,o.kt)("a",{parentName:"p",href:"https://airflow.apache.org/"},"Apache Airflow"),", ",(0,o.kt)("a",{parentName:"p",href:"https://databricks.com/blog/2021/07/13/announcement-orchestrating-multiple-tasks-with-databricks-jobs-public-preview.html"},"Databricks Jobs Orchestration"),", ",(0,o.kt)("a",{parentName:"p",href:"https://dagster.io/"},"Dagster"),"\n",(0,o.kt)("strong",{parentName:"p"},"Event-Driven + Declarative")," (e.g. ",(0,o.kt)("a",{parentName:"p",href:"https://databricks.com/discover/demos/delta-lake-data-integration-demo-auto-loader-and-copy-into"},"Databricks Auto Loader"),", ",(0,o.kt)("a",{parentName:"p",href:"https://databricks.com/discover/demos/delta-live-tables-demo"},"Delta Live Tables"),")\n",(0,o.kt)("strong",{parentName:"p"},"Other triggers:")," (e.g. AWS Lambda, ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/glue/latest/dg/trigger-job.html"},"Glue Triggers"),")"))}u.isMDXComponent=!0},2332:function(e,t,a){t.Z=a.p+"assets/images/big-data-sword-f661a3f9269c794183fe4ce3480a796d.png"},7160:function(e,t,a){t.Z=a.p+"assets/images/data-processing-vision-a59ff56df35005ec4085de683d25e1bc.png"},4015:function(e,t,a){t.Z=a.p+"assets/images/map-reduce-processing-2397bafb5a04130d82688f98633d37d8.png"}}]);